name: CI/CD Pipeline

#############################
# Start the job on all push #
#############################
on: [push, pull_request]

jobs:
  tests:
    name: Python ${{ matrix.python-version }} Flask ${{ matrix.flask-version }}
    runs-on: ubuntu-20.04
    environment: test

    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        flask-version: ["2.3.2", "3.0.0"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pipenv
          pipenv install flask==${{ matrix.flask-version }}
      - name: Run tests
        run: |
          make check
          make test
        env:
          RANDOM_SEED: 0

  deploy:
    needs: tests
    runs-on: ubuntu-20.04
    if: success()  # Este job serÃ¡ executado apenas se o job de testes for bem-sucedido.

    steps:
      - uses: actions/checkout@v3

      # Criar o arquivo .pem a partir do secret
      - name: Create .pem file
        run: |
          echo "${{ secrets.AWS_KEY_PEM }}" > Devops.pem
          chmod 600 Devops.pem  # Corrigido para o nome correto do arquivo

      # Deploy para AWS
      - name: Deploy to AWS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          ssh -o StrictHostKeyChecking=no -i "Devops.pem" ec2-user@<Elastic_IP> << 'EOF'
          cd /caminho/para/seu/projeto  # Altere para o caminho correto
          git pull origin master 
          pipenv install 
          FLASK_APP=app.py flask run --host=0.0.0.0 --port=5000 &
          EOF

      # Deploy para Render
      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          curl -X POST https://api.render.com/deploy/srv-xxxxxxxxx \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}"


  
